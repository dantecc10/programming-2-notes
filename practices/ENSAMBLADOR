.code
main proc
    mov ax, @data
    mov ds, ax

    ; Imprimir mensaje inicial
    mov ah, 09h
    lea dx, msg
    int 21h

    mov cx, 10  ; Calcular 10 números de Fibonacci
    mov ax, 0   ; Primer número
    mov bx, 1   ; Segundo número

print_loop:
    push cx

    ; Convertir número a string
    mov num, ax
    call num_to_str

    ; Imprimir número
    mov ah, 09h
    lea dx, buffer
    int 21h

    ; Imprimir espacio
    mov ah, 02h
    mov dl, ' '
    int 21h

    ; Calcular siguiente número
    mov cx, bx
    add bx, ax
    mov ax, cx

    pop cx
    loop print_loop

    ; Salir del programa
    mov ah, 4ch
    int 21h
main endp



num_to_str proc
    mov ax, num
    mov si, 5
    mov bx, 10

convert_loop:
    xor dx, dx
    div bx
    add dl, '0'
    mov buffer[si], dl
    dec si
    test ax, ax
    jnz convert_loop

    inc si
    mov dx, si
    add dx, offset buffer
    ret
num_to_str endp

end main